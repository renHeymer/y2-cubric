buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'

group = 'com.nsa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 10

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes 'Main-Class': 'com.nsa.cubric.CubricApplication'
    }
}

checkstyle {
    ignoreFailures = true
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
        html.enabled true
    }
}

dependencies {

    /*
        THYMELEAF TEMPLATING
     */
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.thymeleaf:thymeleaf-spring4:3.0.11.RELEASE')
    implementation('org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.4.RELEASE')

    /*
        WEB
     */
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-websocket')

    /*
        DATABASE
     */
    implementation('mysql:mysql-connector-java')
    implementation('org.hibernate:hibernate-core')
//    implementation('org.flywaydb:flyway-core')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')

    /*
        SECURITY
     */
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.0.RELEASE')

    /*
        UTILS
     */
    implementation('org.projectlombok:lombok')
    annotationProcessor("org.projectlombok:lombok:1.18.2")
    implementation('org.apache.poi:poi-ooxml:3.9')
    implementation('org.json:json:20180813')
    implementation('com.googlecode.json-simple:json-simple:1.1')
    implementation('org.springframework.boot:spring-boot-starter-validation')

    /*
        TESTING
    */

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation('org.springframework.security:spring-security-test')
    implementation('org.seleniumhq.selenium:selenium-java:2.41.0')
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
    implementation('org.springframework.boot:spring-boot-starter-actuator')


    /*
        WEBJARS
    */

    implementation('org.webjars:webjars-locator:0.14')
    implementation('org.webjars:bootstrap:4.2.1')
    implementation('org.webjars:jquery:3.3.1-1')
    implementation('org.webjars.bower:chart.js:2.7.3')

}
